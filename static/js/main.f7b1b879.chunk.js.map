{"version":3,"sources":["components/MockSirSettings.js","components/MockSirChart.js","components/MockSirPanel.js","containers/MockSirContainer.js","actions/index.js","utils/actionTypes.js","components/SeirSettings.js","components/SeirChart.js","components/SeirPanel.js","containers/SeirContainer.js","App.js","models/mockSir.js","reducers/mockSir.js","models/seir.js","reducers/seir.js","reducers/index.js","serviceWorker.js","index.js"],"names":["MockSirSettings","state","props","params","handlePopulationChange","_ev","population","setState","onParamsChange","handleDurationChange","duration","handleBetaChange","beta","classes","this","className","root","Typography","gutterBottom","Slider","defaultValue","valueLabelFormat","v","aria-labelledby","valueLabelDisplay","min","step","max","onChange","marks","Component","withStyles","theme","width","padding","MockSirChart","data","height","margin","stroke","strokeDasharray","type","dataKey","stackId","fill","tickFormatter","val","mag","Math","floor","pow","top","right","bottom","left","MockSirPanel","Fragment","connect","ownProps","mockSir","dispatch","onMockSirParamsChange","SeirSettings","handleLatentPeriodChange","latentPeriod","handleInfectiousPeriodChange","infectiousPeriod","handleTauChange","tau","SeirChart","SeirPanel","seir","onSeirParamsChange","App","CssBaseline","AppBar","position","Toolbar","variant","color","grow","Tooltip","title","aria-label","IconButton","href","fontSize","content","MockSirContainer","SeirContainer","flexGrow","spacing","withTheme","DEFAULT_PARAM","genData","N","D","B","susceptable","infected","recovered","day","acc","nxt","push","initialState","model","action","K","G","T","exposed","died","ds","de","di","dr","dd","tb","tk","tg","tt","reducer","combineReducers","Boolean","window","location","hostname","match","store","createStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7b1b879.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n    padding: 10,\n  },\n});\n\nclass MockSirSettings extends Component {\n  state = this.props.params;\n  render() {\n    const { classes } = this.props;\n    const params = this.state;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          人数\n        </Typography>\n        <Slider\n          defaultValue={params.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          感染能力がある期間（日）\n        </Typography>\n        <Slider\n          defaultValue={params.duration}\n          aria-labelledby=\"duration-slider\"\n          valueLabelDisplay=\"auto\"\n          marks\n          min={1}\n          step={1}\n          max={15}\n          onChange={this.handleDurationChange}\n        />\n        <Typography gutterBottom>\n          １日に１人から感染する人数\n        </Typography>\n        <Slider\n          defaultValue={params.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.setState({ population });\n    this.props.onParamsChange({\n      ...this.state,\n      population\n    });\n  };\n\n  handleDurationChange = (_ev, duration) => {\n    this.setState({ duration });\n    this.props.onParamsChange({\n      ...this.state,\n      duration\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.setState({ beta });\n    this.props.onParamsChange({\n      ...this.state,\n      beta\n    });\n  };\n}\n\nMockSirSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(MockSirSettings);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\n\nconst styles = theme => ({\n  root: {\n    padding: 10\n  },\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  }\n});\n\nconst getTick = (val, mag) => {\n  if (mag <= 4) return val;\n  if (val === 0) return val;\n  mag = Math.floor(mag - 0.01);\n  val /= Math.pow(10, mag);\n  return `${val}e${mag}`;\n};\n\nclass MockSirChart extends Component {\n  render () {\n    const { classes, params, data } = this.props;\n    return (\n      <div className={classes.root}>\n        <AreaChart\n          width={800}\n          height={400}\n          data={data}\n          margin={classes.margin}\n        >\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray={[5, 5]} />\n          <Area type=\"monotone\" dataKey=\"infected\" stackId=\"1\" stroke=\"#ff7f58\" fill=\"#ff7f58\" />\n          <Area type=\"monotone\" dataKey=\"susceptable\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          <Area type=\"monotone\" dataKey=\"recovered\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis tickFormatter={(v) => getTick(v, params.population)}/>\n          <Legend />\n          <Tooltip />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nMockSirChart.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles)(MockSirChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MockSirSettings from '../components/MockSirSettings';\nimport MockSirChart from '../components/MockSirChart';\n\nclass MockSirPanel extends Component {\n  render () {\n    const { params, data, onParamsChange } = this.props;\n    return (\n      <React.Fragment>\n        <MockSirSettings\n          params={params}\n          onParamsChange={onParamsChange}\n        />\n        <MockSirChart\n          params={params}\n          data={data}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nMockSirPanel.propTypes = {\n  params: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onParamsChange: PropTypes.func.isRequired\n};\n\nexport default MockSirPanel;\n","import { connect } from 'react-redux';\nimport { onMockSirParamsChange } from '../actions';\n\nimport MockSirPanel from '../components/MockSirPanel';\n\nconst mapState = (state, ownProps) => (state.mockSir);\n\nconst mapDispatch = dispatch => ({\n  onParamsChange: (params) => dispatch(onMockSirParamsChange(params))\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(MockSirPanel);\n","import * as actionTypes from '../utils/actionTypes';\n\nexport const onMockSirParamsChange = (params) => ({\n  type: actionTypes.MOCK_SIR_PARAMS_CHANGE,\n  params\n});\n\nexport const onSeirParamsChange = (params) => ({\n  type: actionTypes.SEIR_PARAMS_CHANGE,\n  params\n});\n","export const MOCK_SIR_PARAMS_CHANGE = 'MOCK_SIR_PARAMS_CHANGE';\n\nexport const SEIR_PARAMS_CHANGE = 'SEIR_PARAMS_CHANGE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n    padding: 10,\n  },\n});\n\nclass SeirSettings extends Component {\n  state = this.props.params;\n  render() {\n    const { classes } = this.props;\n    const params = this.state;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          N：人数\n        </Typography>\n        <Slider\n          defaultValue={params.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          β：伝達係数\n        </Typography>\n        <Slider\n          defaultValue={params.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n        <Typography gutterBottom>\n          lp：潜伏期間\n        </Typography>\n        <Slider\n          defaultValue={params.latentPeriod}\n          aria-labelledby=\"latent-period-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={15}\n          onChange={this.handleLatentPeriodChange}\n        />\n\n        <Typography gutterBottom>\n          ip：感染期間\n        </Typography>\n        <Slider\n          defaultValue={params.infectiousPeriod}\n          aria-labelledby=\"infectious-period-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={15}\n          onChange={this.handleInfectiousPeriodChange}\n        />\n        <Typography gutterBottom>\n          τ：死亡率\n        </Typography>\n        <Slider\n          defaultValue={params.tau}\n          aria-labelledby=\"tau-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.001}\n          max={0.1}\n          onChange={this.handleTauChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.setState({ population });\n    this.props.onParamsChange({\n      ...this.state,\n      population\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.setState({ beta });\n    this.props.onParamsChange({\n      ...this.state,\n      beta\n    });\n  };\n\n  handleLatentPeriodChange = (_ev, latentPeriod) => {\n    this.setState({ latentPeriod });\n    this.props.onParamsChange({\n      ...this.state,\n      latentPeriod\n    });\n  };\n\n\n  handleInfectiousPeriodChange = (_ev, infectiousPeriod) => {\n    this.setState({ infectiousPeriod });\n    this.props.onParamsChange({\n      ...this.state,\n      infectiousPeriod\n    });\n  };\n\n  handleTauChange = (_ev, tau) => {\n    this.setState({ tau });\n    this.props.onParamsChange({\n      ...this.state,\n      tau\n    });\n  };\n}\n\nSeirSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SeirSettings);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\n\nconst styles = theme => ({\n  root: {\n    padding: 10\n  },\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  }\n});\n\nconst getTick = (val, mag) => {\n  if (mag <= 4) return val;\n  if (val === 0) return val;\n  mag = Math.floor(mag - 0.01);\n  val /= Math.pow(10, mag);\n  return `${val}e${mag}`;\n};\n\nclass SeirChart extends Component {\n  render () {\n    const { classes, params, data } = this.props;\n    return (\n      <div className={classes.root}>\n        <AreaChart\n          width={800}\n          height={400}\n          data={data}\n          margin={classes.margin}\n        >\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray={[5, 5]} />\n          <Area type=\"monotone\" dataKey=\"infected\" stackId=\"1\" stroke=\"#ff7f58\" fill=\"#ff7f58\" />\n          <Area type=\"monotone\" dataKey=\"exposed\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n          <Area type=\"monotone\" dataKey=\"susceptable\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          <Area type=\"monotone\" dataKey=\"recovered\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n          <Area type=\"monotone\" dataKey=\"died\" stackId=\"1\" stroke=\"#cccccc\" fill=\"#cccccc\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis tickFormatter={(v) => getTick(v, params.population)}/>\n          <Legend />\n          <Tooltip />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nSeirChart.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles)(SeirChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SeirSettings from '../components/SeirSettings';\nimport SeirChart from '../components/SeirChart';\n\nclass SeirPanel extends Component {\n  render () {\n    const { params, data, onParamsChange } = this.props;\n    return (\n      <React.Fragment>\n        <SeirSettings\n          params={params}\n          onParamsChange={onParamsChange}\n        />\n        <SeirChart\n          params={params}\n          data={data}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nSeirPanel.propTypes = {\n  params: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onParamsChange: PropTypes.func.isRequired\n};\n\nexport default SeirPanel;\n","import { connect } from 'react-redux';\nimport { onSeirParamsChange } from '../actions';\n\nimport SeirPanel from '../components/SeirPanel';\n\nconst mapState = (state, ownProps) => (state.seir);\n\nconst mapDispatch = dispatch => ({\n  onParamsChange: (params) => dispatch(onSeirParamsChange(params))\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(SeirPanel);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport GithubCircle from 'mdi-material-ui/GithubCircle';\n\nimport MockSirContainer from './containers/MockSirContainer';\nimport SeirContainer from './containers/SeirContainer';\n\nconst styles = theme => ({\n  root: {\n  },\n  grow: {\n    flexGrow: 1\n  },\n  content: {\n    padding: theme.spacing(3)\n  }\n});\n\nclass App extends Component {\n  render () {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n        >\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              感染症流行シミュレーター\n            </Typography>\n            <Tooltip title=\"View source on Github\" aria-label=\"View source on Github\">\n              <IconButton\n                color=\"inherit\"\n                href=\"https://github.com/nejiko96/react-sir-like-model\"\n              >\n                <GithubCircle fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.content}>\n          <Typography variant=\"h4\">なんちゃってSIRモデル</Typography>\n          <MockSirContainer />\n          <Typography variant=\"h4\">SEIRモデル</Typography>\n          <SeirContainer />\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","export const DEFAULT_PARAM = {\n  population: 4,\n  duration: 3,\n  beta: 1\n};\n\nexport const genData = (params = DEFAULT_PARAM) => {\n  const N = Math.pow(10, params.population);\n  const D = params.duration;\n  const B = params.beta;\n  let susceptable = N;\n  let infected = 0;\n  let recovered = 0;\n  const data = [\n    {\n      day: 0,\n      susceptable,\n      infected,\n      recovered\n    }\n  ];\n  const acc = [0];\n  let nxt = 1;\n  for (let day = 1; day <= 1000; day++) {\n    acc[day] = acc[day - 1] + nxt;\n    recovered = acc[day - D] || 0;\n    infected = acc[day] - recovered;\n    susceptable = N - acc[day];\n    data.push({\n      day,\n      susceptable,\n      infected,\n      recovered\n    });\n    if (infected < 0.5) break;\n    nxt = Math.min(B * infected * susceptable / N, susceptable);\n  }\n  return data;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/mockSir';\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  data: model.genData()\n};\n\nconst mockSir = (state = initialState, action) => {\n  if (action.type === actionTypes.MOCK_SIR_PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      data: model.genData(action.params)\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default mockSir;\n","export const DEFAULT_PARAM = {\n  population: 4,\n  beta: 0.8,\n  latentPeriod: 7,\n  infectiousPeriod: 3,\n  tau: 0.001\n};\n\nexport const genData = (params = DEFAULT_PARAM) => {\n  const N = Math.pow(10, params.population);\n  const B = params.beta;\n  const K = 1 / params.latentPeriod;\n  let G = 1 / params.infectiousPeriod;\n  const T = params.tau;\n  if (G + T > 1) {\n    G = 1 - T;\n  }\n  let susceptable = N;\n  let exposed = 0;\n  let infected = 0;\n  let recovered = 0;\n  let died = 0;\n  const data = [\n    {\n      day: 0,\n      susceptable,\n      exposed,\n      infected,\n      recovered,\n      died\n    }\n  ];\n  let ds = -1;\n  let de = 0;\n  let di = 1;\n  let dr = 0;\n  let dd = 0;\n  for (let day = 1; day <= 1000; day++) {\n    susceptable += ds;\n    exposed += de;\n    infected += di;\n    recovered += dr;\n    died += dd;\n    data.push({\n      day,\n      susceptable,\n      exposed,\n      infected,\n      recovered,\n      died\n    });\n    if ((exposed + infected) < 0.5) break;\n    const tb = B * infected * susceptable / N;\n    const tk = K * exposed;\n    const tg = G * infected;\n    const tt = T * infected;\n    ds = -tb;\n    de = tb - tk;\n    di = tk - tg - tt;\n    dr = tg;\n    dd = tt;\n  }\n  return data;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/seir';\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  data: model.genData()\n};\n\nconst seir = (state = initialState, action) => {\n  if (action.type === actionTypes.SEIR_PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      data: model.genData(action.params)\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default seir;\n","import { combineReducers } from 'redux';\nimport mockSir from './mockSir';\nimport seir from './seir';\n\nconst reducer = combineReducers({\n  mockSir,\n  seir\n});\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport reducer from './reducers';\n\n// PWA support\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}