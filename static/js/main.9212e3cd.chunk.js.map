{"version":3,"sources":["components/Settings.js","containers/SettingsContainer.js","actions/index.js","utils/actionTypes.js","components/Chart.js","containers/ChartContainer.js","App.js","models/proto.js","reducers/index.js","serviceWorker.js","index.js"],"names":["Settings","handlePopulationChange","_ev","population","props","onParamsChange","params","handleDurationChange","duration","handleBetaChange","beta","this","classes","className","root","Typography","gutterBottom","Slider","defaultValue","valueLabelFormat","v","aria-labelledby","valueLabelDisplay","min","step","max","onChange","marks","Component","withStyles","theme","width","mapDispatch","type","connect","state","ownProps","Chart","chart","height","data","margin","stroke","strokeDasharray","dataKey","stackId","fill","tickFormatter","val","mag","Math","floor","pow","padding","top","right","bottom","left","App","CssBaseline","AppBar","position","Toolbar","variant","color","grow","Tooltip","title","aria-label","IconButton","href","fontSize","content","SettingsContainer","ChartContainer","flexGrow","spacing","withTheme","DEFAULT_PARAM","genChart","N","D","B","susceptable","infected","recovered","day","acc","nxt","push","initialState","model","reducer","action","Boolean","window","location","hostname","match","store","createStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9212e3cd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n  },\n});\n\nclass Settings extends Component {\n  render() {\n    const { classes, params} = this.props;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          全体の人数\n        </Typography>\n        <Slider\n          defaultValue={params.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          感染能力がある期間（日）\n        </Typography>\n        <Slider\n          defaultValue={params.duration}\n          aria-labelledby=\"duration-slider\"\n          valueLabelDisplay=\"auto\"\n          marks\n          min={1}\n          step={1}\n          max={15}\n          onChange={this.handleDurationChange}\n        />\n        <Typography gutterBottom>\n          １日に１人から感染する人数\n        </Typography>\n        <Slider\n          defaultValue={params.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.props.onParamsChange({\n      ...this.props.params,\n      population\n    });\n  };\n\n  handleDurationChange = (_ev, duration) => {\n    this.props.onParamsChange({\n      ...this.props.params,\n      duration\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.props.onParamsChange({\n      ...this.props.params,\n      beta\n    });\n  };\n}\n\nSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Settings);\n","import { connect } from 'react-redux';\nimport { onParamsChange } from '../actions';\n\nimport Settings from '../components/Settings';\n\nconst mapState = (state, ownProps) => ({\n  params: state.params\n});\n\nconst mapDispatch = {\n  onParamsChange,\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Settings)\n","import * as actionTypes from '../utils/actionTypes';\n\nexport const onParamsChange = (params) => ({\n  type: actionTypes.PARAMS_CHANGE,\n  params\n});\n","export const PARAMS_CHANGE = 'PARAMS_CHANGE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\n\nconst styles = theme => ({\n  root: {\n    padding: 10,\n  },\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20,\n  },\n});\n\nconst getTick = (val, mag) => {\n  if (mag <= 4) return val;\n  if (val === 0) return val;\n  mag = Math.floor(mag - 0.01);\n  val /= Math.pow(10, mag);\n  return `${val}e${mag}`;\n};\n\nclass Chart extends Component {\n  render() {\n    const { classes, params, chart } = this.props;\n    return (\n      <div className={classes.root}>\n        <AreaChart\n          width={800}\n          height={400}\n          data={chart}\n          margin={classes.margin}\n        >\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray={[5, 5]} />\n          <Area type=\"monotone\" dataKey=\"infected\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n          <Area type=\"monotone\" dataKey=\"susceptable\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          <Area type=\"monotone\" dataKey=\"recovered\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis tickFormatter={(v) => getTick(v, params.population)}/>\n          <Legend />\n          <Tooltip />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  classes: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  chart: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles)(Chart);\n","import { connect } from 'react-redux';\n\nimport Chart from '../components/Chart';\n\nconst mapState = (state, ownProps) => ({\n  params: state.params,\n  chart: state.chart\n});\n\nexport default connect(\n  mapState\n)(Chart)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport GithubCircle from 'mdi-material-ui/GithubCircle';\n\nimport SettingsContainer from './containers/SettingsContainer';\nimport ChartContainer from './containers/ChartContainer';\n\nconst styles = theme => ({\n  root: {\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  content: {\n    padding: theme.spacing(3),\n  },\n});\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n        >\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              感染症流行シミュレーター\n            </Typography>\n            <Tooltip title=\"View source on Github\" aria-label=\"View source on Github\">\n              <IconButton\n                color=\"inherit\"\n                href=\"https://github.com/nejiko96/react-sir-like-model\"\n              >\n                <GithubCircle fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.content}>\n          <SettingsContainer />\n          <ChartContainer />\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","export const DEFAULT_PARAM = {\n  population: 4,\n  duration: 3,\n  beta: 1,\n};\n\nexport const genChart = (params = DEFAULT_PARAM) => {\n  const N = Math.pow(10, params.population);\n  const D = params.duration;\n  const B = params.beta;\n  let susceptable = N;\n  let infected = 0;\n  let recovered = 0;\n  let chart = [\n    {\n      day: 0,\n      susceptable,\n      infected,\n      recovered\n    }\n  ];\n  let acc = [0];\n  let nxt = 1;\n  for(let day = 1; day <= 1000; day++) {\n    acc[day] = acc[day - 1] + nxt;\n    recovered = acc[day - D] || 0;\n    infected = acc[day] - recovered;\n    susceptable = N - acc[day];\n    chart.push({\n      day,\n      susceptable,\n      infected,\n      recovered\n    });\n    if (infected < 0.5) break;\n    nxt = Math.min(B * infected * susceptable / N, susceptable);\n  }\n  return chart;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/proto'\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  chart: model.genChart(),\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === actionTypes.PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      chart: model.genChart(action.params)\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport reducer from './reducers';\n\n// PWA support\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}