{"version":3,"sources":["components/MockSirSettings.js","utils/index.js","components/SirChart.js","components/MockSirPanel.js","containers/MockSirContainer.js","actions/index.js","utils/actionTypes.js","components/SirSettings.js","components/SirPanel.js","containers/SirContainer.js","components/SeirSettings.js","components/SeirChart.js","components/SeirPanel.js","containers/SeirContainer.js","App.js","models/mockSir.js","reducers/mockSir.js","models/sir.js","reducers/sir.js","models/seir.js","reducers/seir.js","reducers/index.js","utils/i18n.js","serviceWorker.js","index.js"],"names":["MockSirSettings","state","population","duration","beta","handlePopulationChange","_ev","setState","props","onParamsChange","handleDurationChange","handleBetaChange","classes","this","className","root","Typography","gutterBottom","i18n","t","Slider","value","valueLabelFormat","v","aria-labelledby","valueLabelDisplay","min","step","max","onChange","marks","params","Component","withStyles","theme","width","padding","logarithmTickFormat","val","mag","mag2","Math","floor","val2","chartMargin","top","right","bottom","left","data","height","margin","stroke","strokeDasharray","type","dataKey","stackId","fill","tickFormatter","MockSirPanel","useTranslation","variant","connect","mockSir","dispatch","onMockSirParamsChange","SirSettings","infectiousPeriod","handleInfectiousPeriodChange","SirPanel","sir","onSirParamsChange","SeirSettings","latentPeriod","tau","handleLatentPeriodChange","handleTauChange","SeirPanel","seir","onSeirParamsChange","grow","flexGrow","content","spacing","withTheme","useState","lang","setLang","useEffect","changeLanguage","CssBaseline","AppBar","position","Toolbar","color","Button","onClick","Tooltip","title","aria-label","IconButton","href","fontSize","MockSirContainer","SirContainer","SeirContainer","DEFAULT_PARAM","genData","N","D","B","susceptable","infected","recovered","day","acc","nxt","push","initialState","model","action","G","ds","di","dr","tb","tg","K","T","exposed","died","de","dd","tk","tt","reducer","combineReducers","initI18n","use","initReactI18next","init","debug","resources","en","translation","enJson","ja","jaJson","lng","fallbackLng","Boolean","window","location","hostname","match","store","createStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.66f6c384.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from 'i18next';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n    padding: 10,\n  },\n});\n\nclass MockSirSettings extends Component {\n  state = {\n    population: 4,\n    duration: 3,\n    beta: 0.5,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    return props.params;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          {i18n.t('mockSir.settings.population')}\n        </Typography>\n        <Slider\n          value={this.state.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('mockSir.settings.duration')}\n        </Typography>\n        <Slider\n          value={this.state.duration}\n          aria-labelledby=\"duration-slider\"\n          valueLabelDisplay=\"auto\"\n          marks\n          min={1}\n          step={1}\n          max={15}\n          onChange={this.handleDurationChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('mockSir.settings.beta')}\n        </Typography>\n        <Slider\n          value={this.state.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.setState({ population });\n    this.props.onParamsChange({\n      ...this.state,\n      population\n    });\n  };\n\n  handleDurationChange = (_ev, duration) => {\n    this.setState({ duration });\n    this.props.onParamsChange({\n      ...this.state,\n      duration\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.setState({ beta });\n    this.props.onParamsChange({\n      ...this.state,\n      beta\n    });\n  };\n}\n\nMockSirSettings.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  params: PropTypes.shape({\n    population: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    beta: PropTypes.number.isRequired,\n  }).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(MockSirSettings);\n","\nexport const logarithmTickFormat = (val, mag) => {\n  if (mag <= 4) return val;\n  if (val === 0) return val;\n  const mag2 = Math.floor(mag - 0.01);\n  const val2 = val / 10 ** mag2;\n  return `${val2}e${mag2}`;\n};\n\n// eslint:import/prefer-default-export\nexport default {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AreaChart, Area, CartesianGrid, XAxis, YAxis, Legend, Tooltip,\n} from 'recharts';\n\nimport { logarithmTickFormat } from '../utils';\n\nconst styles = () => ({\n  root: {\n    padding: 10,\n  },\n});\n\nconst chartMargin = {\n  top: 20,\n  right: 20,\n  bottom: 20,\n  left: 20,\n};\n\nconst SirChart = ({ classes, params, data }) => (\n  <div className={classes.root}>\n    <AreaChart\n      width={800}\n      height={400}\n      data={data}\n      margin={chartMargin}\n    >\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray={[5, 5]} />\n      <Area type=\"monotone\" dataKey=\"infected\" stackId=\"1\" stroke=\"#ff7f58\" fill=\"#ff7f58\" />\n      <Area type=\"monotone\" dataKey=\"susceptable\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n      <Area type=\"monotone\" dataKey=\"recovered\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n      <XAxis dataKey=\"day\" />\n      <YAxis tickFormatter={(v) => logarithmTickFormat(v, params.population)} />\n      <Legend />\n      <Tooltip />\n    </AreaChart>\n  </div>\n);\n\n\nSirChart.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  params: PropTypes.shape({\n    population: PropTypes.number.isRequired,\n  }).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    day: PropTypes.number.isRequired,\n    infected: PropTypes.number.isRequired,\n    susceptable: PropTypes.number.isRequired,\n    recovered: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default withStyles(styles)(SirChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Typography from '@material-ui/core/Typography';\nimport MockSirSettings from './MockSirSettings';\nimport SirChart from './SirChart';\n\nconst MockSirPanel = ({ params, data, onParamsChange }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Typography variant=\"h4\">{t('mockSir.title')}</Typography>\n      <MockSirSettings\n        params={params}\n        onParamsChange={onParamsChange}\n      />\n      <SirChart\n        params={params}\n        data={data}\n      />\n    </>\n  );\n};\n\nMockSirPanel.propTypes = {\n  params: PropTypes.shape({}).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default MockSirPanel;\n","import { connect } from 'react-redux';\nimport { onMockSirParamsChange } from '../actions';\n\nimport MockSirPanel from '../components/MockSirPanel';\n\nconst mapState = (state) => (state.mockSir);\n\nconst mapDispatch = (dispatch) => ({\n  onParamsChange: (params) => dispatch(onMockSirParamsChange(params)),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch,\n)(MockSirPanel);\n","import * as actionTypes from '../utils/actionTypes';\n\nexport const onMockSirParamsChange = (params) => ({\n  type: actionTypes.MOCK_SIR_PARAMS_CHANGE,\n  params,\n});\n\nexport const onSirParamsChange = (params) => ({\n  type: actionTypes.SIR_PARAMS_CHANGE,\n  params,\n});\n\nexport const onSeirParamsChange = (params) => ({\n  type: actionTypes.SEIR_PARAMS_CHANGE,\n  params,\n});\n","export const MOCK_SIR_PARAMS_CHANGE = 'MOCK_SIR_PARAMS_CHANGE';\n\nexport const SIR_PARAMS_CHANGE = 'SIR_PARAMS_CHANGE';\n\nexport const SEIR_PARAMS_CHANGE = 'SEIR_PARAMS_CHANGE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from 'i18next';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n    padding: 10,\n  },\n});\n\nclass SirSettings extends Component {\n  state = {\n    population: 4,\n    beta: 0.5,\n    infectiousPeriod: 3,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    return props.params;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          {i18n.t('sir.settings.population')}\n        </Typography>\n        <Slider\n          value={this.state.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('sir.settings.beta')}\n        </Typography>\n        <Slider\n          value={this.state.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('sir.settings.ip')}\n        </Typography>\n        <Slider\n          value={this.state.infectiousPeriod}\n          aria-labelledby=\"infectious-period-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={15}\n          onChange={this.handleInfectiousPeriodChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.setState({ population });\n    this.props.onParamsChange({\n      ...this.state,\n      population\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.setState({ beta });\n    this.props.onParamsChange({\n      ...this.state,\n      beta\n    });\n  };\n\n  handleInfectiousPeriodChange = (_ev, infectiousPeriod) => {\n    this.setState({ infectiousPeriod });\n    this.props.onParamsChange({\n      ...this.state,\n      infectiousPeriod\n    });\n  };\n}\n\nSirSettings.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  params: PropTypes.shape({\n    population: PropTypes.number.isRequired,\n    beta: PropTypes.number.isRequired,\n    infectiousPeriod: PropTypes.number.isRequired,\n  }).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SirSettings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Typography from '@material-ui/core/Typography';\nimport SirSettings from './SirSettings';\nimport SirChart from './SirChart';\n\nconst SirPanel = ({ params, data, onParamsChange }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Typography variant=\"h4\">{t('sir.title')}</Typography>\n      <SirSettings\n        params={params}\n        onParamsChange={onParamsChange}\n      />\n      <SirChart\n        params={params}\n        data={data}\n      />\n    </>\n  );\n};\n\nSirPanel.propTypes = {\n  params: PropTypes.shape({}).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default SirPanel;\n","import { connect } from 'react-redux';\nimport { onSirParamsChange } from '../actions';\n\nimport SirPanel from '../components/SirPanel';\n\nconst mapState = (state) => (state.sir);\n\nconst mapDispatch = (dispatch) => ({\n  onParamsChange: (params) => dispatch(onSirParamsChange(params)),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch,\n)(SirPanel);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from 'i18next';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst styles = theme => ({\n  root: {\n    width: 400,\n    padding: 10,\n  },\n});\n\nclass SeirSettings extends Component {\n  state = {\n    population: 4,\n    beta: 0.8,\n    latentPeriod: 7,\n    infectiousPeriod: 3,\n    tau: 0.001,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    return props.params;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Typography gutterBottom>\n          {i18n.t('seir.settings.population')}\n        </Typography>\n        <Slider\n          value={this.state.population}\n          valueLabelFormat={(v) => `10^${v}`}\n          aria-labelledby=\"population-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={10}\n          onChange={this.handlePopulationChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('seir.settings.beta')}\n        </Typography>\n        <Slider\n          value={this.state.beta}\n          aria-labelledby=\"beta-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.01}\n          max={2}\n          onChange={this.handleBetaChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('seir.settings.lp')}\n        </Typography>\n        <Slider\n          value={this.state.latentPeriod}\n          aria-labelledby=\"latent-period-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={15}\n          onChange={this.handleLatentPeriodChange}\n        />\n\n        <Typography gutterBottom>\n          {i18n.t('seir.settings.ip')}\n        </Typography>\n        <Slider\n          value={this.state.infectiousPeriod}\n          aria-labelledby=\"infectious-period-slider\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          step={0.1}\n          max={15}\n          onChange={this.handleInfectiousPeriodChange}\n        />\n        <Typography gutterBottom>\n          {i18n.t('seir.settings.tau')}\n        </Typography>\n        <Slider\n          value={this.state.tau}\n          aria-labelledby=\"tau-slider\"\n          valueLabelDisplay=\"auto\"\n          min={0}\n          step={0.001}\n          max={0.1}\n          onChange={this.handleTauChange}\n        />\n      </div>\n    );\n  }\n\n  handlePopulationChange = (_ev, population) => {\n    this.setState({ population });\n    this.props.onParamsChange({\n      ...this.state,\n      population\n    });\n  };\n\n  handleBetaChange = (_ev, beta) => {\n    this.setState({ beta });\n    this.props.onParamsChange({\n      ...this.state,\n      beta\n    });\n  };\n\n  handleLatentPeriodChange = (_ev, latentPeriod) => {\n    this.setState({ latentPeriod });\n    this.props.onParamsChange({\n      ...this.state,\n      latentPeriod\n    });\n  };\n\n\n  handleInfectiousPeriodChange = (_ev, infectiousPeriod) => {\n    this.setState({ infectiousPeriod });\n    this.props.onParamsChange({\n      ...this.state,\n      infectiousPeriod\n    });\n  };\n\n  handleTauChange = (_ev, tau) => {\n    this.setState({ tau });\n    this.props.onParamsChange({\n      ...this.state,\n      tau\n    });\n  };\n}\n\nSeirSettings.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  params: PropTypes.shape({\n    population: PropTypes.number.isRequired,\n    beta: PropTypes.number.isRequired,\n    latentPeriod: PropTypes.number.isRequired,\n    infectiousPeriod: PropTypes.number.isRequired,\n    tau: PropTypes.number.isRequired,\n  }).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SeirSettings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AreaChart, Area, CartesianGrid, XAxis, YAxis, Legend, Tooltip,\n} from 'recharts';\n\nimport { logarithmTickFormat } from '../utils';\n\nconst styles = () => ({\n  root: {\n    padding: 10,\n  },\n});\n\nconst chartMargin = {\n  top: 20,\n  right: 20,\n  bottom: 20,\n  left: 20,\n};\n\nconst SeirChart = ({ classes, params, data }) => (\n  <div className={classes.root}>\n    <AreaChart\n      width={800}\n      height={400}\n      data={data}\n      margin={chartMargin}\n    >\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray={[5, 5]} />\n      <Area type=\"monotone\" dataKey=\"infected\" stackId=\"1\" stroke=\"#ff7f58\" fill=\"#ff7f58\" />\n      <Area type=\"monotone\" dataKey=\"exposed\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n      <Area type=\"monotone\" dataKey=\"susceptable\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n      <Area type=\"monotone\" dataKey=\"recovered\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n      <Area type=\"monotone\" dataKey=\"died\" stackId=\"1\" stroke=\"#cccccc\" fill=\"#cccccc\" />\n      <XAxis dataKey=\"day\" />\n      <YAxis tickFormatter={(v) => logarithmTickFormat(v, params.population)} />\n      <Legend />\n      <Tooltip />\n    </AreaChart>\n  </div>\n);\n\nSeirChart.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  params: PropTypes.shape({\n    population: PropTypes.number.isRequired,\n  }).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    day: PropTypes.number.isRequired,\n    infected: PropTypes.number.isRequired,\n    exposed: PropTypes.number.isRequired,\n    susceptable: PropTypes.number.isRequired,\n    recovered: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default withStyles(styles)(SeirChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Typography from '@material-ui/core/Typography';\nimport SeirSettings from './SeirSettings';\nimport SeirChart from './SeirChart';\n\nconst SeirPanel = ({ params, data, onParamsChange }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Typography variant=\"h4\">{t('seir.title')}</Typography>\n      <SeirSettings\n        params={params}\n        onParamsChange={onParamsChange}\n      />\n      <SeirChart\n        params={params}\n        data={data}\n      />\n    </>\n  );\n};\n\nSeirPanel.propTypes = {\n  params: PropTypes.shape({}).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onParamsChange: PropTypes.func.isRequired,\n};\n\nexport default SeirPanel;\n","import { connect } from 'react-redux';\nimport { onSeirParamsChange } from '../actions';\n\nimport SeirPanel from '../components/SeirPanel';\n\nconst mapState = (state) => (state.seir);\n\nconst mapDispatch = (dispatch) => ({\n  onParamsChange: (params) => dispatch(onSeirParamsChange(params)),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch,\n)(SeirPanel);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport GithubCircle from 'mdi-material-ui/GithubCircle';\n\nimport MockSirContainer from './containers/MockSirContainer';\nimport SirContainer from './containers/SirContainer';\nimport SeirContainer from './containers/SeirContainer';\n\nconst styles = (theme) => ({\n  root: {\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  content: {\n    padding: theme.spacing(3),\n  },\n});\n\nconst App = (props) => {\n  const { t, i18n } = useTranslation();\n  const { classes } = props;\n  const [lang, setLang] = useState('ja');\n\n  useEffect(() => {\n    i18n.changeLanguage(lang);\n  }, [lang, i18n]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"static\"\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            {t('app.title')}\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => setLang(lang === 'en' ? 'ja' : 'en')}\n          >\n            { lang === 'en' ? 'Switch to Japanese' : '英語に切替' }\n          </Button>\n          <Tooltip title=\"View source on Github\" aria-label=\"View source on Github\">\n            <IconButton\n              color=\"inherit\"\n              href=\"https://github.com/nejiko96/react-sir-like-model\"\n            >\n              <GithubCircle fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <MockSirContainer />\n        <SirContainer />\n        <SeirContainer />\n      </main>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    grow: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","export const DEFAULT_PARAM = {\n  population: 4,\n  duration: 3,\n  beta: 1,\n};\n\nexport const genData = (params = DEFAULT_PARAM) => {\n  const N = 10 ** params.population;\n  const D = params.duration;\n  const B = params.beta;\n  let susceptable = N;\n  let infected = 0;\n  let recovered = 0;\n  const data = [\n    {\n      day: 0,\n      susceptable,\n      infected,\n      recovered,\n    },\n  ];\n  const acc = [0];\n  let nxt = 1;\n  for (let day = 1; day <= 1000; day += 1) {\n    acc[day] = acc[day - 1] + nxt;\n    recovered = acc[day - D] || 0;\n    infected = acc[day] - recovered;\n    susceptable = N - acc[day];\n    data.push({\n      day,\n      susceptable,\n      infected,\n      recovered,\n    });\n    if (infected < 0.5) break;\n    nxt = Math.min((B * infected * susceptable) / N, susceptable);\n  }\n  return data;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/mockSir';\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  data: model.genData(),\n};\n\nconst mockSir = (state = initialState, action) => {\n  if (action.type === actionTypes.MOCK_SIR_PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      data: model.genData(action.params),\n    };\n  }\n  return state;\n};\n\nexport default mockSir;\n","export const DEFAULT_PARAM = {\n  population: 4,\n  beta: 0.5,\n  infectiousPeriod: 3,\n};\n\nexport const genData = (params = DEFAULT_PARAM) => {\n  const N = 10 ** params.population;\n  const B = params.beta;\n  const G = 1 / params.infectiousPeriod;\n\n  let susceptable = N;\n  let infected = 0;\n  let recovered = 0;\n  const data = [\n    {\n      day: 0,\n      susceptable,\n      infected,\n      recovered,\n    },\n  ];\n  let ds = -1;\n  let di = 1;\n  let dr = 0;\n  for (let day = 1; day <= 1000; day += 1) {\n    susceptable += ds;\n    infected += di;\n    recovered += dr;\n    data.push({\n      day,\n      susceptable,\n      infected,\n      recovered,\n    });\n    if (infected < 0.5) break;\n    const tb = Math.min((B * infected * susceptable) / N, susceptable);\n    const tg = G * infected;\n    ds = -tb;\n    di = tb - tg;\n    dr = tg;\n  }\n  return data;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/sir';\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  data: model.genData(),\n};\n\nconst sir = (state = initialState, action) => {\n  if (action.type === actionTypes.SIR_PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      data: model.genData(action.params),\n    };\n  }\n  return state;\n};\n\nexport default sir;\n","export const DEFAULT_PARAM = {\n  population: 4,\n  beta: 0.8,\n  latentPeriod: 7,\n  infectiousPeriod: 3,\n  tau: 0.001,\n};\n\nexport const genData = (params = DEFAULT_PARAM) => {\n  const N = 10 ** params.population;\n  const B = params.beta;\n  const K = 1 / params.latentPeriod;\n  let G = 1 / params.infectiousPeriod;\n  const T = params.tau;\n  if (G + T > 1) {\n    G = 1 - T;\n  }\n  let susceptable = N;\n  let exposed = 0;\n  let infected = 0;\n  let recovered = 0;\n  let died = 0;\n  const data = [\n    {\n      day: 0,\n      susceptable,\n      exposed,\n      infected,\n      recovered,\n      died,\n    },\n  ];\n  let ds = -1;\n  let de = 0;\n  let di = 1;\n  let dr = 0;\n  let dd = 0;\n  for (let day = 1; day <= 1000; day += 1) {\n    susceptable += ds;\n    exposed += de;\n    infected += di;\n    recovered += dr;\n    died += dd;\n    data.push({\n      day,\n      susceptable,\n      exposed,\n      infected,\n      recovered,\n      died,\n    });\n    if ((exposed + infected) < 0.5) break;\n    const tb = (B * infected * susceptable) / N;\n    const tk = K * exposed;\n    const tg = G * infected;\n    const tt = T * infected;\n    ds = -tb;\n    de = tb - tk;\n    di = tk - tg - tt;\n    dr = tg;\n    dd = tt;\n  }\n  return data;\n};\n","import * as actionTypes from '../utils/actionTypes';\nimport * as model from '../models/seir';\n\nconst initialState = {\n  params: model.DEFAULT_PARAM,\n  data: model.genData(),\n};\n\nconst seir = (state = initialState, action) => {\n  if (action.type === actionTypes.SEIR_PARAMS_CHANGE) {\n    return {\n      params: action.params,\n      data: model.genData(action.params),\n    };\n  }\n  return state;\n};\n\nexport default seir;\n","import { combineReducers } from 'redux';\nimport mockSir from './mockSir';\nimport sir from './sir';\nimport seir from './seir';\n\nconst reducer = combineReducers({\n  mockSir,\n  sir,\n  seir,\n});\n\nexport default reducer;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport enJson from '../locales/en.json';\nimport jaJson from '../locales/ja.json';\n\nconst initI18n = () => {\n  i18n.use(initReactI18next).init({\n    debug: true,\n    resources: {\n      en: { translation: enJson },\n      ja: { translation: jaJson },\n    },\n    lng: 'ja',\n    fallbackLng: 'en',\n  });\n};\n\nexport default initI18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport reducer from './reducers';\n\n// i18n\nimport initI18n from './utils/i18n';\n\n// PWA support\nimport * as serviceWorker from './serviceWorker';\n\ninitI18n();\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}